/*
 * File: app/store/Events.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AI.store.Events', {
    extend: 'Ext.data.Store',

    requires: [
        'AI.model.Event'
    ],

    constructor: function(cfg) {
        var me = this;
        cfg = cfg || {};
        me.callParent([Ext.apply({
            model: 'AI.model.Event',
            storeId: 'Events',
            data: [
                {
                    eventName: 'EventName 1',
                    xtype: 'Xtype 1',
                    source: 'Source 1',
                    cmpId: 'CmpId 1'
                },
                {
                    eventName: 'EventName 2',
                    xtype: 'Xtype 2',
                    source: 'Source 2',
                    cmpId: 'CmpId 2'
                },
                {
                    eventName: 'EventName 3',
                    xtype: 'Xtype 3',
                    source: 'Source 3',
                    cmpId: 'CmpId 3'
                },
                {
                    eventName: 'EventName 4',
                    xtype: 'Xtype 4',
                    source: 'Source 4',
                    cmpId: 'CmpId 4'
                },
                {
                    eventName: 'EventName 5',
                    xtype: 'Xtype 5',
                    source: 'Source 5',
                    cmpId: 'CmpId 5'
                },
                {
                    eventName: 'EventName 6',
                    xtype: 'Xtype 6',
                    source: 'Source 6',
                    cmpId: 'CmpId 6'
                },
                {
                    eventName: 'EventName 7',
                    xtype: 'Xtype 7',
                    source: 'Source 7',
                    cmpId: 'CmpId 7'
                },
                {
                    eventName: 'EventName 8',
                    xtype: 'Xtype 8',
                    source: 'Source 8',
                    cmpId: 'CmpId 8'
                },
                {
                    eventName: 'EventName 9',
                    xtype: 'Xtype 9',
                    source: 'Source 9',
                    cmpId: 'CmpId 9'
                },
                {
                    eventName: 'EventName 10',
                    xtype: 'Xtype 10',
                    source: 'Source 10',
                    cmpId: 'CmpId 10'
                },
                {
                    eventName: 'EventName 11',
                    xtype: 'Xtype 11',
                    source: 'Source 11',
                    cmpId: 'CmpId 11'
                },
                {
                    eventName: 'EventName 12',
                    xtype: 'Xtype 12',
                    source: 'Source 12',
                    cmpId: 'CmpId 12'
                },
                {
                    eventName: 'EventName 13',
                    xtype: 'Xtype 13',
                    source: 'Source 13',
                    cmpId: 'CmpId 13'
                },
                {
                    eventName: 'EventName 14',
                    xtype: 'Xtype 14',
                    source: 'Source 14',
                    cmpId: 'CmpId 14'
                },
                {
                    eventName: 'EventName 15',
                    xtype: 'Xtype 15',
                    source: 'Source 15',
                    cmpId: 'CmpId 15'
                },
                {
                    eventName: 'EventName 16',
                    xtype: 'Xtype 16',
                    source: 'Source 16',
                    cmpId: 'CmpId 16'
                },
                {
                    eventName: 'EventName 17',
                    xtype: 'Xtype 17',
                    source: 'Source 17',
                    cmpId: 'CmpId 17'
                },
                {
                    eventName: 'EventName 18',
                    xtype: 'Xtype 18',
                    source: 'Source 18',
                    cmpId: 'CmpId 18'
                },
                {
                    eventName: 'EventName 19',
                    xtype: 'Xtype 19',
                    source: 'Source 19',
                    cmpId: 'CmpId 19'
                },
                {
                    eventName: 'EventName 20',
                    xtype: 'Xtype 20',
                    source: 'Source 20',
                    cmpId: 'CmpId 20'
                }
            ]
        }, cfg)]);
    },

    findAll: function(property, value, anyMatch, caseSensitive) {
        var me = this,
            data = Ext.clone(me.data),

            filter = me.decodeFilters([{
                property      : property,
                value         : value,
                anyMatch      : anyMatch,
                caseSensitive : caseSensitive
            }]),

            filteredData = data.filter(filter),
            indices = [];

        Ext.each(filteredData.getRange(), function (record) {
            var index = me.indexOf(record);
            indices.push(index);
        });

        return indices;
    }

});