/*
 * File: app/view/stores/RecordDetails.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('AI.view.stores.RecordDetails', {
    extend: 'Ext.tree.Panel',
    alias: 'widget.recorddetails',

    requires: [
        'Ext.tree.View',
        'Ext.tree.Column'
    ],

    cls: 'treegrid',
    title: 'Record Details',
    columnLines: false,
    hideHeaders: true,
    rowLines: true,
    store: 'stores.RecordDetails',
    useArrows: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            data: {
                text: 'My.model.Foo'
            },
            viewConfig: {
                markDirty: false,
                stripeRows: true
            },
            columns: [
                {
                    xtype: 'treecolumn',
                    dataIndex: 'text',
                    text: 'Name',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        var v = value;

                        if (value === null) {
                            v = 'null';
                        }

                        if (record.data.text === 'undefined') {
                            v = 'undefined';
                        }

                        return '<span class="' + record.get('type') + ' ' + v + '">' + v + '</span>';
                    },
                    dataIndex: 'value',
                    text: 'Value',
                    flex: 2
                }
            ]
        });

        me.callParent(arguments);
    }

});